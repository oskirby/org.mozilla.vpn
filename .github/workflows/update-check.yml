name: Check for updates
on:
  schedule:
    - cron: '0 * * * *' # Runs hourly
  workflow_dispatch: {}

jobs:
  update-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Fetch latest release candidate commit
        id: check-updates
        run: |
          BRANCH_LINE_NUM=$(sed -n '/\s*branch:/=' org.mozilla.vpn.yml | tail -1)
          COMMIT_LINE_NUM=$(sed -n '/\s*commit:/=' org.mozilla.vpn.yml | tail -1)
          
          curl -sSL -o branches.json \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/mozilla-mobile/mozilla-vpn-client/branches?protected=true

          LATEST_NAME=$(jq -r '.[].name' branches.json | grep '^releases/' | sort -V | tail -1)
          LATEST_COMMIT=$(jq -r ".[] | select(.name == \"${LATEST_NAME}\").commit.sha" branches.json)
          LATEST_VERSION=$(echo ${LATEST_NAME} | cut -d/ -f2)

          sed -i "$BRANCH_LINE_NUM s/branch:.*/branch: releases\/${LATEST_VERSION}/g" org.mozilla.vpn.yml
          sed -i "$COMMIT_LINE_NUM s/commit:.*/commit: ${LATEST_COMMIT}/g" org.mozilla.vpn.yml

          echo "RC_BRANCH=${LATEST_NAME}" >> $GITHUB_ENV
          echo "RC_COMMIT=${LATEST_COMMIT}" >> $GITHUB_ENV
          echo "RC_VERSION=$(echo ${LATEST_VERSION} | cut -d/ -f2)" >> $GITHUB_ENV
          if ! git diff --exit-code org.mozilla.vpn.yml; then
            echo "upstream=true" >> $GITHUB_OUTPUT
          fi

      - name: Run external data checker
        uses: docker://ghcr.io/flathub/flatpak-external-data-checker:latest
        with:
          args: --update --edit-only --never-fork org.mozilla.vpn.yml

      - uses: actions/setup-python@v5
        if: steps.check-updates.outputs.upstream == 'true'
        with:
          python-version: 3.12
          cache: pip
      - run: pip install -r .github/requirements.txt
        if: steps.check-updates.outputs.upstream == 'true'

      - name: Checkout upstream
        if: steps.check-updates.outputs.upstream == 'true'
        uses: actions/checkout@v4
        with:
          path: upstream
          repository: mozilla-mobile/mozilla-vpn-client
          ref: ${{ steps.check-updates.outputs.upstream-ref }}
          sparse-checkout: |
            Cargo.lock
            requirements.in

      - name: Checkout tools
        if: steps.check-updates.outputs.upstream == 'true'
        uses: actions/checkout@v4
        with:
          path: tools
          repository: flatpak/flatpak-builder-tools
          ref: master

      - name: Fetch latest release details
        if: steps.check-updates.outputs.upstream == 'true'
        run: |
          curl -sSL -o org.mozilla.vpn.releases.xml \
            https://mozilla.github.io/mozillavpn-product-details/org.mozilla.vpn.releases.xml

      - name: Update dependencies
        if: steps.check-updates.outputs.upstream == 'true'
        run: |
          python tools/cargo/flatpak-cargo-generator.py -o flatpak-vpn-crates.json upstream/Cargo.lock
          python tools/pip/flatpak-pip-generator.py -o flatpak-glean-parser.yaml --yaml --build-only $(cat upstream/requirements.in | grep ^glean-parser)

      - name: Create pull request
        uses: peter-evans/create-pull-request@v7
        if: steps.check-updates.outputs.upstream == 'true'
        with:
          branch: upstream-rc${{ env.RC_VERSION }}-${{ env.RC_COMMIT }}
          commit-message: "mozillavpn: Release candidate ${{ env.RC_VERSION }} to beta"
          title: "mozillavpn: Release candidate ${{ env.RC_VERSION }} to beta"
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          add-paths: |
            flatpak-vpn-crates.json
            org.mozilla.vpn.releases.xml
            org.mozilla.vpn.yml
          body: |
            Automated update created by [create-pull-request][2] for release candidate [${{ env.RC_VERSION }}][1]
            [1]: httos://github.com/mozilla-mobile/mozilla-vpn-client/commit/${{ env.RC_COMMIT }}
            [2]: https://github.com/peter-evans/create-pull-request
